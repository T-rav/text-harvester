version: '3.8'

services:
  postgres:
    image: postgres:15.9-bookworm
    container_name: scribe-ai-postgres-container
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-scribe.ai}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d scribe.ai"]
      interval: 5s
      timeout: 5s
      retries: 5

  azurite:
    image: mcr.microsoft.com/azure-storage/azurite:3.23.0
    container_name: azurite-container
    ports:
      - "10000:10000"
      - "10001:10001"
      - "10002:10002"
    volumes:
      - azurite_blob_data:/data/blob
      - azurite_queue_data:/data/queue
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:10000"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq-container
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    container_name: scribe-ai-api-container
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-scribe.ai}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
      - PORT=3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      azurite:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "3001"]
      interval: 10s
      timeout: 5s
      retries: 3

  updater:
    build:
      context: ./src/api
      dockerfile: Dockerfile
    container_name: scribe-ai-updater-container
    command: npm run updater
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-scribe.ai}
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      azurite:
        condition: service_healthy

  translator:
    build:
      context: ./src/translator
      dockerfile: Dockerfile
    container_name: scribe-ai-translator-container
    environment:
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-guest}:${RABBITMQ_PASSWORD:-guest}@rabbitmq:5672
      - AZURE_STORAGE_CONNECTION_STRING=DefaultEndpointsProtocol=http;AccountName=devstoreaccount1;AccountKey=Eby8vdM02xNOcqFlqUwJPLlmEtlCDXJ1OUzFT50uSRZ6IFsuFq2UVErCz4I6tq/K1SZFPTOtr/KBHBeksoGMGw==;BlobEndpoint=http://azurite:10000/devstoreaccount1;QueueEndpoint=http://azurite:10001/devstoreaccount1;TableEndpoint=http://azurite:10002/devstoreaccount1;
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-true}
      - LANGCHAIN_ENDPOINT=${LANGCHAIN_ENDPOINT:-https://api.smith.langchain.com}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY}
      - LANGCHAIN_PROJECT=${LANGCHAIN_PROJECT:-scribe-ai}
      - TRANSCRIPTION_JOB_QUEUE_NAME=${TRANSCRIPTION_JOB_QUEUE_NAME:-transcription-jobs-demo}
      - TRANSCRIPTION_UPDATE_QUEUE_NAME=${TRANSCRIPTION_UPDATE_QUEUE_NAME:-transcription-updates}
      - DEAD_LETTER_EXCHANGE=${DEAD_LETTER_EXCHANGE:-scribe-ai-dlx}
      - MAX_RETRIES=${MAX_RETRIES:-5}
      - MAX_LENGTH_MINUTES=${MAX_LENGTH_MINUTES:-0}
    volumes:
      - translator_data:/app/incoming
    depends_on:
      rabbitmq:
        condition: service_healthy
      azurite:
        condition: service_healthy

  ui:
    build:
      context: ./src/ui/scribe
      dockerfile: Dockerfile
    container_name: scribe-ai-ui-container
    environment:
      - REACT_APP_API_URL=http://localhost:3001
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      api:
        condition: service_healthy

volumes:
  postgres_data:
  rabbitmq_data:
  azurite_blob_data:
  azurite_queue_data:
  translator_data:
